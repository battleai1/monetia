üéØ –ó–∞–¥–∞—á–∞

–ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ-—Ñ–∏–¥ (—Ñ–æ—Ä–º–∞—Ç Instagram Reels) –≤ Telegram WebApp —Ç–∞–∫, —á—Ç–æ–±—ã:

–Ω–µ –±—ã–ª–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è HLS/–∞—É–¥–∏–æ –∏ –≥–æ–Ω–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏,

–≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –≤–∏–¥–µ–æ,

–∂–µ—Å—Ç—ã:

–¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ (‚â•150‚Äì200 –º—Å) –Ω–∞ —Ü–µ–Ω—Ç—Ä–µ –∏–ª–∏ –ª–µ–≤–æ–π —á–∞—Å—Ç–∏ –≤–∏–¥–µ–æ ‚Üí –ø–∞—É–∑–∞/—Ä–µ–∑—é–º (toggle);

–¥–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ ‚Üí —É—Å–∫–æ—Ä–µ–Ω–∏–µ x2 –ø–æ–∫–∞ –¥–µ—Ä–∂–∏–º –ø–∞–ª–µ—Ü/–º—ã—à—å; –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏ ‚Üí –æ–±—Ä–∞—Ç–Ω–æ x1.

–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ä–æ–ª–∏–∫–∞ –≤ —Ñ–æ–∫—É—Å–µ (–∫–∞–∫ –≤ Reels) –∏ –ø–∞—É–∑–∞ –≤—Å–µ—Ö –Ω–µ –≤ —Ñ–æ–∫—É—Å–µ.

–ë–µ–∑ –∑–∞–∏–∫–∞–Ω–∏–π –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–æ–ª–∏–∫–æ–≤, –±–µ–∑ —É—Ç–µ—á–µ–∫ Hls.js, –±–µ–∑ ¬´—Ñ–∞–Ω—Ç–æ–º–Ω–æ–≥–æ¬ª –∑–≤—É–∫–∞ –Ω–∞ —Ñ–æ–Ω–µ –¥–∞–∂–µ –∫–æ–≥–¥–∞ –≤–∏–¥–æ—Å –Ω–∞ –ø–∞—É–∑–µ.

üì¶ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è

Frontend: Vanilla TS/JS –∏–ª–∏ React (–µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —É–∂–µ –Ω–∞ React ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å React).

–ü–ª–µ–µ—Ä: –Ω–∞—Ç–∏–≤–Ω—ã–π <video> + hls.js (fallback –Ω–∞ –Ω–∞—Ç–∏–≤–Ω—ã–π HLS –≤ iOS Safari).

–¶–µ–ª–µ–≤–∞—è —Å—Ä–µ–¥–∞: Telegram WebApp (–º–æ–±–∏–ª—å–Ω—ã–µ WebView Android/iOS), —Ç–∞–∫–∂–µ –æ–±—ã—á–Ω—ã–µ –º–æ–±–∏–ª—å–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã.

–ë–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –≥—Ä–æ–º–æ–∑–¥–∫–∏—Ö –ø–ª–µ–µ—Ä–æ–≤ (video.js –∏ —Ç. –ø. ‚Äî –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å).

üß± –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
1) Singleton VideoController

–°–æ–∑–¥–∞—Ç—å VideoController (singleton), –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:

—Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ø–ª–µ–µ—Ä –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏;

API:

register(videoEl, source, id) ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HLS (–∏–ª–∏ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ HLS), –≤–æ–∑–≤—Ä–∞—Ç handle —Å –º–µ—Ç–æ–¥–∞–º–∏;

activate(id) ‚Äî –¥–µ–ª–∞–µ—Ç –ø–ª–µ–µ—Ä –∞–∫—Ç–∏–≤–Ω—ã–º, —Å—Ç–∞–≤–∏—Ç –ø–∞—É–∑—É –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ;

pauseAll(exceptId?);

destroy(id) ‚Äî —Å—Ç–æ–ø –∑–∞–≥—Ä—É–∑–æ–∫, hls.detachMedia(), hls.destroy(), —É–¥–∞–ª–µ–Ω–∏–µ —Å–ª—É—à–∞—Ç–µ–ª–µ–π;

–∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–≥–æ –∂–µ id (–¥–µ–¥—É–ø).

–ì–∞—Ä–∞–Ω—Ç–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≥–æ–Ω–æ–∫:

–¥–ª—è –∫–∞–∂–¥–æ–≥–æ id —Ö—Ä–∞–Ω–∏—Ç—å initToken/AbortController; –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–µ—Ä—ã–≤–∞—Ç—å;

–Ω–∏–∫–∞–∫–æ–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ HLS.

Audio discipline: –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É –≤—Å–µ—Ö –ù–ï–∞–∫—Ç–∏–≤–Ω—ã—Ö videoEl.muted=true; videoEl.pause().

2) IntersectionObserver (IO)

IO –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏/–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ä–æ–ª–∏–∫–æ–≤.

–ü—Ä–∞–≤–∏–ª–∞:

–µ—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ ‚â•60% –≤ –≤—å—é–ø–æ—Ä—Ç–µ ‚Üí VideoController.activate(id) –∏ play() –∞–∫—Ç–∏–≤–Ω–æ–≥–æ;

–∏–Ω–∞—á–µ ‚Üí pause().

–ù–∞ visibilitychange –∏ pagehide ‚Üí pauseAll().

3) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HLS

–ï—Å–ª–∏ videoEl.canPlayType('application/vnd.apple.mpegURL') ‚Üí –ù–ï –ø–æ–¥–∫–ª—é—á–∞—Ç—å hls.js; –ø—Ä–æ—Å—Ç–æ videoEl.src = source.

–ò–Ω–∞—á–µ:

const hls = new Hls({ autoStartLoad: false, ...safe-config });

hls.attachMedia(videoEl) ‚Üí on MEDIA_ATTACHED ‚Üí hls.loadSource(source) ‚Üí hls.startLoad().

–ü—Ä–∏ register –∏ –ø—Ä–∏ –ª—é–±–æ–º re-render –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—à–ª—ã–π –∏–Ω—Å—Ç–∞–Ω—Å:

hls.stopLoad(); hls.detachMedia(); hls.destroy();

—É–¥–∞–ª—è—Ç—å –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ DOM + hls.

–ù–∞ —Å–º–µ–Ω–µ source —É —Ç–æ–≥–æ –∂–µ id ‚Äî –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: destroy ‚Üí attach ‚Üí load (–Ω–∏–∫–∞–∫–∏—Ö ¬´–≥–æ—Ä—è—á–∏—Ö¬ª –ø–µ—Ä–µ–∑–∞–ø–∏—Å–µ–π src –±–µ–∑ detach).

4) –ñ–µ—Å—Ç—ã (Pointer Events)

–í–µ—à–∞—Ç—å –Ω–∞ —Å–ª–æ–π-–æ–≤–µ—Ä–ª–µ–∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–∏–¥–µ–æ (—á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å–ø–∏—Å–∫–∞).

–õ–æ–≥–∏–∫–∞:

pointerdown: —Ñ–∏–∫—Å–∏—Ä—É–µ–º downX (–≤ –¥–æ–ª—è—Ö —à–∏—Ä–∏–Ω—ã) –∏ –∑–∞–ø—É—Å–∫–∞–µ–º setTimeout (150‚Äì200 –º—Å).

–ï—Å–ª–∏ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ —Ç–∞–π–º–µ—Ä–∞:

–µ—Å–ª–∏ x <= 0.66 ‚Üí toggle pause (–µ—Å–ª–∏ –∏–≥—Ä–∞–ª ‚Äî –ø–∞—É–∑–∞; –µ—Å–ª–∏ —Å—Ç–æ—è–ª ‚Äî play –∏ VideoController.activate(id)).

–µ—Å–ª–∏ x > 0.66 ‚Üí videoEl.playbackRate = 2.0 –∏ VideoController.activate(id);

pointerup/pointercancel: –µ—Å–ª–∏ –±—ã–ª —Ä–µ–∂–∏–º —É—Å–∫–æ—Ä–µ–Ω–∏—è ‚Äî –≤–µ—Ä–Ω—É—Ç—å playbackRate = 1.0. –°–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä.

–°–ª—É—à–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Å { passive: false }, –Ω–∞ —É–¥–µ—Ä–∂–∞–Ω–∏–∏ –º–æ–∂–Ω–æ preventDefault() —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–π —Å–∫—Ä–æ–ª–ª/long-press –º–µ–Ω—é, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ–±—ã—á–Ω—ã–π —Å–≤–∞–π–ø –ø–æ —Ñ–∏–¥—É (—Ç–æ–ª—å–∫–æ –≤ –º–æ–º–µ–Ω—Ç —É–¥–µ—Ä–∂–∞–Ω–∏—è).

–ö–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–ø (<150 –º—Å) ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º (–∏–Ω–∞—á–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å–æ —Å–∫—Ä–æ–ª–ª–æ–º).

5) –ü–æ–ª–∏—Ç–∏–∫–∏ –∞–≤—Ç–æ–ø–ª–µ—è/–∞—É–¥–∏–æ (–º–æ–±–∏–ª–∫–∏)

–ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏: videoEl.muted = true; videoEl.playsInline = true;

–ü–µ—Ä–≤—ã–π ¬´–Ω–∞—Å—Ç–æ—è—â–∏–π¬ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∂–µ—Å—Ç (–ª—é–±–æ–π pointerdown) –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å videoEl.play() –∏ —Å–Ω—è—Ç—å muted=false —Ç–æ–ª—å–∫–æ —É –∞–∫—Ç–∏–≤–Ω–æ–≥–æ.

–í iOS –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ playsinline –∞—Ç—Ä–∏–±—É—Ç.

üß© –§–∞–π–ª—ã –∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–æ–¥–∞

–°–æ–∑–¥–∞–π/–æ–±–Ω–æ–≤–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ React ‚Äî –∫–∞–∫ —Ö—É–∫–∏/–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã; –µ—Å–ª–∏ Vanilla ‚Äî –∫–∞–∫ –∫–ª–∞—Å—Å—ã/–º–æ–¥—É–ª–∏):

video-controller.ts
import Hls from 'hls.js';

type PlayerEntry = {
  id: string;
  el: HTMLVideoElement;
  hls?: Hls | null;
  initAbort?: AbortController;
  source: string;
};

class VideoController {
  private players = new Map<string, PlayerEntry>();
  private activeId: string | null = null;

  register(el: HTMLVideoElement, source: string, id: string) {
    // dedup by id
    const prev = this.players.get(id);
    if (prev?.el === el && prev?.source === source) return;

    // cancel previous init and destroy safely
    if (prev) this.destroy(id);

    const entry: PlayerEntry = { id, el, source, hls: null, initAbort: new AbortController() };
    this.players.set(id, entry);

    // base attrs
    el.muted = true;
    el.playsInline = true;
    el.setAttribute('playsinline', '');
    el.preload = 'metadata';
    el.loop = true; // –∫–∞–∫ –≤ Reels

    // HLS init with race guard
    const { signal } = entry.initAbort!;
    (async () => {
      try {
        if (signal.aborted) return;

        if (el.canPlayType('application/vnd.apple.mpegURL')) {
          el.src = source;
          await el.load?.();
        } else if (Hls.isSupported()) {
          const hls = new Hls({
            maxBufferLength: 10,
            maxMaxBufferLength: 30,
            startPosition: -1,
            enableWorker: true,
            lowLatencyMode: true,
            backBufferLength: 30,
            progressive: true,
            // –¥—Ä—É–≥–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–µ—Ñ–æ–ª—Ç—ã
          });
          entry.hls = hls;
          hls.attachMedia(el);
          hls.on(Hls.Events.MEDIA_ATTACHED, () => {
            if (signal.aborted) return;
            hls.loadSource(source);
            hls.startLoad();
          });
          const cleanup = () => {
            hls.stopLoad();
            hls.detachMedia();
            hls.destroy();
            entry.hls = null;
          };
          // —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
          hls.on(Hls.Events.ERROR, (_, data) => {
            if (data.fatal) {
              cleanup();
            }
          });
        } else {
          // –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å ‚Äî –ø—Ä—è–º–æ–π src (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –¥–∞—ë—Ç MP4)
          el.src = source;
        }
      } catch {}
    })();
  }

  activate(id: string) {
    if (this.activeId === id) return;
    this.pauseAll(id);
    this.activeId = id;
    const entry = this.players.get(id);
    if (!entry) return;
    entry.el.muted = false;
    entry.el.play().catch(() => {});
  }

  pauseAll(exceptId?: string) {
    for (const [pid, p] of this.players) {
      if (exceptId && pid === exceptId) continue;
      try {
        p.el.playbackRate = 1.0;
        p.el.pause();
        p.el.muted = true;
      } catch {}
    }
  }

  destroy(id: string) {
    const entry = this.players.get(id);
    if (!entry) return;
    entry.initAbort?.abort();
    try {
      entry.hls?.stopLoad();
      entry.hls?.detachMedia();
      entry.hls?.destroy();
    } catch {}
    try {
      entry.el.src = '';
      entry.el.removeAttribute('src');
      entry.el.load();
    } catch {}
    this.players.delete(id);
    if (this.activeId === id) this.activeId = null;
  }
}

export const videoController = new VideoController();

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ (React) ReelCard.tsx
import { useEffect, useRef } from 'react';
import { videoController } from './video-controller';

type Props = { id: string; hlsUrl: string };

export default function ReelCard({ id, hlsUrl }: Props) {
  const ref = useRef<HTMLVideoElement>(null);
  const holdTimer = useRef<number | null>(null);
  const holdingRight = useRef(false);

  useEffect(() => {
    const el = ref.current!;
    videoController.register(el, hlsUrl, id);
    return () => videoController.destroy(id);
  }, [id, hlsUrl]);

  useEffect(() => {
    const el = ref.current!;
    const onPointerDown = (e: PointerEvent) => {
      const rect = el.getBoundingClientRect();
      const xFrac = (e.clientX - rect.left) / rect.width;

      let fired = false;
      const timer = window.setTimeout(() => {
        fired = true;
        if (xFrac > 0.66) {
          holdingRight.current = true;
          videoController.activate(id);
          el.playbackRate = 2.0;
          el.play().catch(() => {});
        } else {
          // toggle pause/resume
          if (el.paused) {
            videoController.activate(id);
          } else {
            el.pause();
          }
        }
      }, 180);
      holdTimer.current = timer as unknown as number;

      const stop = () => {
        if (holdTimer.current) {
          clearTimeout(holdTimer.current);
          holdTimer.current = null;
        }
        if (holdingRight.current) {
          holdingRight.current = false;
          el.playbackRate = 1.0;
        }
        window.removeEventListener('pointerup', stop);
        window.removeEventListener('pointercancel', stop);
      };
      window.addEventListener('pointerup', stop, { passive: true });
      window.addEventListener('pointercancel', stop, { passive: true });
    };

    el.addEventListener('pointerdown', onPointerDown, { passive: false });
    return () => el.removeEventListener('pointerdown', onPointerDown);
  }, [id]);

  return (
    <div className="reel-card">
      <video
        ref={ref}
        className="reel-video"
        playsInline
        muted
        loop
        preload="metadata"
        webkit-playsinline="true"
        style={{ width: '100%', height: '100%', objectFit: 'cover' }}
      />
      {/* –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π –¥–ª—è –∂–µ—Å—Ç–æ–≤, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ:
      <div className="gesture-overlay" /> */}
    </div>
  );
}

–°–ø–∏—Å–æ–∫/—Ñ–∏–¥ + IntersectionObserver ReelFeed.tsx
import { useEffect, useRef } from 'react';
import { videoController } from './video-controller';
import ReelCard from './ReelCard';

export default function ReelFeed({ items }: { items: { id: string; url: string }[] }) {
  const containerRef = useRef<HTMLDivElement>(null);
  const cards = useRef<Map<string, HTMLElement>>(new Map());

  useEffect(() => {
    const io = new IntersectionObserver(
      entries => {
        let best: { id: string; ratio: number } | null = null;
        for (const e of entries) {
          const id = (e.target as HTMLElement).dataset['id']!;
          if (e.isIntersecting) {
            if (!best || e.intersectionRatio > best.ratio) {
              best = { id, ratio: e.intersectionRatio };
            }
          }
          if (e.intersectionRatio < 0.2) {
            // –∫–∞—Ä—Ç–æ—á–∫–∞ —É—à–ª–∞ ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–∞—É–∑–∞
            videoController.pauseAll();
          }
        }
        if (best) videoController.activate(best.id);
      },
      { threshold: [0, 0.2, 0.6, 0.8, 1] }
    );

    for (const [id, el] of cards.current) io.observe(el);

    const onVis = () => document.visibilityState !== 'visible' && videoController.pauseAll();
    document.addEventListener('visibilitychange', onVis);
    window.addEventListener('pagehide', () => videoController.pauseAll());

    return () => {
      io.disconnect();
      document.removeEventListener('visibilitychange', onVis);
    };
  }, []);

  return (
    <div ref={containerRef} className="feed">
      {items.map((it) => (
        <div
          key={it.id}
          data-id={it.id}
          ref={el => { if (el) cards.current.set(it.id, el); else cards.current.delete(it.id); }}
          className="feed-item"
          style={{ height: '100vh' }}
        >
          <ReelCard id={it.id} hlsUrl={it.url} />
        </div>
      ))}
    </div>
  );
}

–í–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ React (Vanilla)

–ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞ React ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏: video-controller.js, initFeed.js (—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫, IO), attachGestures(el, id).

‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏—ë–º–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞–≤—Ç–æ/—Ä—É—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏)

–ù–µ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –∑–≤—É–∫–∞: –∑–∞–ø—É—Å–∫–∞–µ–º 3‚Äì5 —Ä–æ–ª–∏–∫–æ–≤ –ø–æ–¥—Ä—è–¥ ‚Äî –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Å–ª—ã—à–Ω–æ —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–π —Ä–æ–ª–∏–∫. –ü–∞—É–∑–∞ –≤ –æ–¥–Ω–æ–º ‚Üí —Ç–∏—à–∏–Ω–∞, –Ω–∏–∫–∞–∫–∏—Ö —Ñ–æ–Ω–æ–≤.

–ù–µ—Ç –≥–æ–Ω–æ–∫: –±—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑ –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ ¬´–∑–∞–ª–∏–ø—à–∏–º¬ª –∞—É–¥–∏–æ, –æ—à–∏–±–æ–∫ hls, —É—Ç–µ—á–∫–∞–º. –ù–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ Hls –¥–ª—è –æ–¥–Ω–æ–≥–æ id.

–ñ–µ—Å—Ç—ã:

—É–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–ª–µ–≤–∞/–ø–æ —Ü–µ–Ω—Ç—Ä—É ‚â•180 –º—Å ‚Äî –ø–∞—É–∑–∞/—Ä–µ–∑—é–º;

—É–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–∞ ‚Äî —Å–∫–æ—Ä–æ—Å—Ç—å x2 –¥–æ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è; –æ—Ç–ø—É—Å—Ç–∏–ª ‚Äî x1;

–∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–ø –Ω–µ –º–µ—à–∞–µ—Ç —Å–∫—Ä–æ–ª–ª—É, –∂–µ—Å—Ç—ã –Ω–µ –ª–æ–º–∞—é—Ç —Å–≤–∞–π–ø—ã —Ñ–∏–¥–∞.

–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞ –ø–æ –≤–∏–¥–∏–º–æ—Å—Ç–∏: –∫–∞—Ä—Ç–æ—á–∫–∞ ‚â•60 % ‚Üí –∏–≥—Ä–∞–µ—Ç, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–æ—è—Ç –Ω–∞ –ø–∞—É–∑–µ; —É—Ö–æ–¥ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã/—Å–≤–µ—Ä–Ω—É—Ç—å ‚Äî –≤—Å—ë –Ω–∞ –ø–∞—É–∑–µ.

iOS Safari/Telegram WebView: playsinline, —Å—Ç–∞—Ä—Ç –±–µ–∑ —Ñ—É–ª–ª—Å–∫—Ä–∏–Ω–∞, –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∂–µ—Å—Ç —Å–Ω–∏–º–∞–µ—Ç mute —É –∞–∫—Ç–∏–≤–Ω–æ–≥–æ.

–û—á–∏—Å—Ç–∫–∞/–ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ: –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∞–∂–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–ª–∏ —Å–º–µ–Ω–µ url ‚Äî —Å—Ç–∞—Ä—ã–µ Hls-–∏–Ω—Å—Ç–∞–Ω—Å—ã —É–Ω–∏—á—Ç–æ–∂–∞—é—Ç—Å—è, src –æ—á–∏—â–∞–µ—Ç—Å—è, —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–Ω—è—Ç—ã.

–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –Ω–µ—Ç —É—Ç–µ—á–µ–∫ listeners/—Ç–∞–π–º–µ—Ä–æ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ DevTools Performance/Memory), —Å—Ç–∞–±–∏–ª—å–Ω–æ <60–ú–ë –¥–æ–ø. –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–º —Å–∫—Ä–æ–ª–ª–µ.

üß™ –ú–∏–Ω–∏-—Ç–µ—Å—Ç-–ø–ª–∞–Ω

–°–∫—Ä–∏–ø—Ç ¬´—Å—Ç—Ä–µ—Å—Å-—Å–∫—Ä–æ–ª–ª–∞¬ª: –±—ã—Å—Ç—Ä–æ –ø—Ä–æ—Å–∫—Ä–æ–ª–ª–∏—Ç—å 20+ –∫–∞—Ä—Ç–æ—á–µ–∫ ‚Äî —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∞–∫—Ç–∏–≤–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–ª–µ–µ—Ä.

–ú–µ–∂–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ: iOS 16+/17 Safari, Android Chrome, Telegram iOS/Android WebApp.

–°–µ—Ç—å 3G/slow-4G: –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ¬´–ø–æ–¥–ø–µ–≤–∞—é—â–µ–≥–æ¬ª –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–æ–ª–∏–∫–∞.

–í –ª–æ–≥–∞—Ö –Ω–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö MEDIA_ATTACHED –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ destroy() –¥–ª—è –æ–¥–Ω–æ–≥–æ id.

üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)

–î–æ–±–∞–≤–∏—Ç—å debounce 150 –º—Å –Ω–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ IO —á—Ç–æ–±—ã —É–º–µ–Ω—å—à–∏—Ç—å –¥—Ä–æ–∂–∞–Ω–∏–µ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏.

–í–∫–ª—é—á–∏—Ç—å Media Session API (–æ–±–ª–æ–∂–∫–∏, –ø–∞—É–∑–∞/–ø–ª–µ–π —Å –≥–∞—Ä–Ω–∏—Ç—É—Ä—ã) ‚Äî –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.

–ß—Ç–æ –≤–∞–∂–Ω–æ –ù–ï –¥–µ–ª–∞—Ç—å

–ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π Hls() –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ.

–ù–µ –º–µ–Ω—è—Ç—å video.src –±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ hls.detachMedia()/destroy() –∏–ª–∏ –æ—á–∏—Å—Ç–∫–∏ src.

–ù–µ –¥–æ–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ id.

–ù–µ –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ autoplay —Å–æ –∑–≤—É–∫–æ–º –±–µ–∑ —è–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∂–µ—Å—Ç–∞.